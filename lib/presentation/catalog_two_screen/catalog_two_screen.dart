import '../catalog_two_screen/widgets/catalogtwo1_item_widget.dart';import '../catalog_two_screen/widgets/catalogtwo_item_widget.dart';import 'controller/catalog_two_controller.dart';import 'models/catalogtwo1_item_model.dart';import 'models/catalogtwo_item_model.dart';import 'package:flutter/material.dart';import 'package:raj_s_application5/core/app_export.dart';import 'package:raj_s_application5/presentation/catalog_one_page/catalog_one_page.dart';import 'package:raj_s_application5/presentation/favorites_modules_page/favorites_modules_page.dart';import 'package:raj_s_application5/presentation/main_page/main_page.dart';import 'package:raj_s_application5/presentation/my_bag_page/my_bag_page.dart';import 'package:raj_s_application5/presentation/my_profile_my_orders_page/my_profile_my_orders_page.dart';import 'package:raj_s_application5/widgets/app_bar/appbar_image.dart';import 'package:raj_s_application5/widgets/app_bar/appbar_subtitle.dart';import 'package:raj_s_application5/widgets/app_bar/custom_app_bar.dart';import 'package:raj_s_application5/widgets/custom_bottom_bar.dart';class CatalogTwoScreen extends GetWidget<CatalogTwoController> {@override Widget build(BuildContext context) { return SafeArea(child: Scaffold(backgroundColor: ColorConstant.gray50, appBar: CustomAppBar(height: getVerticalSize(44), leadingWidth: 32, leading: AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgArrowleft, margin: getMargin(left: 8, top: 8, bottom: 12), onTap: onTapArrowleft6), centerTitle: true, title: AppbarSubtitle(text: "lbl_women_s_tops".tr), actions: [AppbarImage(height: getSize(24), width: getSize(24), svgPath: ImageConstant.imgSearchGray900, margin: getMargin(left: 11, top: 8, right: 11, bottom: 12))], styleType: Style.bgShadowBlack90014), body: Column(mainAxisAlignment: MainAxisAlignment.start, children: [Container(width: double.maxFinite, child: Container(padding: getPadding(top: 8, bottom: 8), decoration: AppDecoration.outlineBlack9001e, child: Column(mainAxisSize: MainAxisSize.min, mainAxisAlignment: MainAxisAlignment.center, children: [Container(height: getVerticalSize(30), child: Obx(() => ListView.separated(padding: getPadding(left: 16), scrollDirection: Axis.horizontal, separatorBuilder: (context, index) {return SizedBox(height: getVerticalSize(7));}, itemCount: controller.catalogTwoModelObj.value.catalogtwoItemList.length, itemBuilder: (context, index) {CatalogtwoItemModel model = controller.catalogTwoModelObj.value.catalogtwoItemList[index]; return CatalogtwoItemWidget(model);}))), Container(margin: getMargin(left: 16, top: 18, right: 16, bottom: 2), decoration: AppDecoration.background, child: Row(mainAxisAlignment: MainAxisAlignment.center, children: [CustomImageView(svgPath: ImageConstant.imgSort, height: getSize(24), width: getSize(24)), Padding(padding: getPadding(left: 7, top: 5, bottom: 7), child: Text("lbl_filters".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtMetropolisRegular11Gray900)), Spacer(flex: 48), CustomImageView(svgPath: ImageConstant.imgSortGray900, height: getSize(24), width: getSize(24)), Padding(padding: getPadding(left: 6, top: 6, bottom: 6), child: Text("msg_price_lowest_to".tr, overflow: TextOverflow.ellipsis, textAlign: TextAlign.left, style: AppStyle.txtMetropolisRegular11Gray900)), Spacer(flex: 51), CustomImageView(svgPath: ImageConstant.imgGrid, height: getSize(24), width: getSize(24))]))]))), Padding(padding: getPadding(left: 17, top: 16, right: 16), child: Obx(() => GridView.builder(shrinkWrap: true, gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(mainAxisExtent: getVerticalSize(263), crossAxisCount: 2, mainAxisSpacing: getHorizontalSize(18), crossAxisSpacing: getHorizontalSize(18)), physics: NeverScrollableScrollPhysics(), itemCount: controller.catalogTwoModelObj.value.catalogtwo1ItemList.length, itemBuilder: (context, index) {Catalogtwo1ItemModel model = controller.catalogTwoModelObj.value.catalogtwo1ItemList[index]; return Catalogtwo1ItemWidget(model);})))]), bottomNavigationBar: CustomBottomBar(onChanged: (BottomBarEnum type) {Get.toNamed(getCurrentRoute(type), id: 1);}))); } 
String getCurrentRoute(BottomBarEnum type) { switch (type) {case BottomBarEnum.Home: return AppRoutes.mainPage; case BottomBarEnum.Shop: return AppRoutes.catalogOnePage; case BottomBarEnum.Bag: return AppRoutes.myBagPage; case BottomBarEnum.Favorites: return AppRoutes.favoritesModulesPage; case BottomBarEnum.Profile: return AppRoutes.myProfileMyOrdersPage; default: return "/";} } 
Widget getCurrentPage(String currentRoute) { switch (currentRoute) {case AppRoutes.mainPage: return MainPage(); case AppRoutes.catalogOnePage: return CatalogOnePage(); case AppRoutes.myBagPage: return MyBagPage(); case AppRoutes.favoritesModulesPage: return FavoritesModulesPage(); case AppRoutes.myProfileMyOrdersPage: return MyProfileMyOrdersPage(); default: return DefaultWidget();} } 
onTapArrowleft6() { Get.back(); } 
 }
